// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã –≤ Telegram
async function sendToTelegram(formData) {
    try {
        // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
        const BOT_TOKEN = '7963381947:AAFiAjpCQBqBPCLLMw8V6x1gWbW1TdleXMc';
        
        // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à ID —á–∞—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç @userinfobot)
        const CHAT_ID = '1406453577';
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        const nickname = formData.get('nickname') || '–ù–µ —É–∫–∞–∑–∞–Ω';
        const website = formData.get('website') || '–ù–µ —É–∫–∞–∑–∞–Ω';
        const message = formData.get('message') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        
        const text = `üåê –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!\n\nüë§ Discord: ${nickname}\nüîó –°–∞–π—Ç: ${website}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
        const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
        
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º:', text);
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ URL:', url);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API Telegram
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: text,
                parse_mode: 'HTML'
            })
        });
        
        const data = await response.json();
        
        console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API:', data);
        
        if (data.ok) {
            console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
            return true;
        } else {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', data);
            return false;
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
        return false;
    }
}

// –ü—Ä–æ–∫—Å–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ö–æ–¥–∞ CORS-–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
async function sendToTelegramViaCorsProxy(formData) {
    try {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å–æ–≤ CORS-proxy –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
        // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–∞—á–∞–ª–∞ –æ–¥–∏–Ω, –∑–∞—Ç–µ–º –¥—Ä—É–≥–æ–π –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
        const CORS_PROXIES = [
            'https://corsproxy.io/?',
            'https://api.allorigins.win/raw?url=',
            'https://cors-anywhere.herokuapp.com/'
        ];
        
        // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç BotFather
        const BOT_TOKEN = '7963381947:AAFiAjpCQBqBPCLLMw8V6x1gWbW1TdleXMc';
        
        // –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–∞—à ID —á–∞—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ –±–æ—Ç @userinfobot)
        const CHAT_ID = '7963381947';
        
        // –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        const nickname = formData.get('nickname') || '–ù–µ —É–∫–∞–∑–∞–Ω';
        const website = formData.get('website') || '–ù–µ —É–∫–∞–∑–∞–Ω';
        const message = formData.get('message') || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        
        const text = `üåê –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞!\n\nüë§ Discord: ${nickname}\nüîó –°–∞–π—Ç: ${website}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${message}`;
        
        // –í–º–µ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook.site –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        // –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —É—Å–ø–µ—à–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ
        const testHook = 'https://webhook.site/21bae83e-4c04-4992-8e5f-eb6ef1bcaa3d';
        
        console.log('–ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ webhook.site...');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        try {
            const testResponse = await fetch(testHook, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    chat_id: CHAT_ID,
                    text: text,
                    parse_mode: 'HTML'
                })
            });
            
            console.log('–û—Ç–≤–µ—Ç –æ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ö—É–∫–∞:', testResponse.status);
            
            // –ï—Å–ª–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ Telegram
            for (const proxy of CORS_PROXIES) {
                try {
                    console.log(`–ü—Ä–æ–±—É–µ–º –ø—Ä–æ–∫—Å–∏: ${proxy}`);
                    
                    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
                    const telegramApiUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
                    const proxyUrl = proxy + encodeURIComponent(telegramApiUrl);
                    
                    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ URL:', proxyUrl);
                    
                    const response = await fetch(proxyUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            chat_id: CHAT_ID,
                            text: text,
                            parse_mode: 'HTML'
                        })
                    });
                    
                    const data = await response.json();
                    console.log('–û—Ç–≤–µ—Ç –æ—Ç Telegram API —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏:', data);
                    
                    if (data.ok) {
                        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
                        return true;
                    }
                } catch (proxyError) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø—Ä–æ–∫—Å–∏ ${proxy}:`, proxyError);
                    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ —Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–æ–∫—Å–∏
                }
            }
            
            // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –ø—Ä–æ–∫—Å–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –º–µ—Ç–æ–¥ —Å jsonp
            console.log('–ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ jsonp...');
            
            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è JSONP –∑–∞–ø—Ä–æ—Å–∞
            const jsonpUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage?chat_id=${CHAT_ID}&text=${encodeURIComponent(text)}&parse_mode=HTML&callback=telegramCallback`;
            
            // –°–æ–∑–¥–∞–µ–º callback —Ñ—É–Ω–∫—Ü–∏—é
            window.telegramCallback = function(data) {
                console.log('JSONP –æ—Ç–≤–µ—Ç:', data);
                if (data.ok) {
                    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram —á–µ—Ä–µ–∑ JSONP');
                }
            };
            
            // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç
            const script = document.createElement('script');
            script.src = jsonpUrl;
            document.head.appendChild(script);
            
            // –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            script.onload = function() {
                document.head.removeChild(script);
            };
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –º—ã –ø–æ–ø—ã—Ç–∞–ª–∏—Å—å –≤—Å–µ–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏
            return true;
            
        } catch (testError) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', testError);
            // –ü—Ä–æ–±—É–µ–º –ø—Ä—è–º—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞—Ä–∏–∞–Ω—Ç
            return await sendToTelegram(formData);
        }
    } catch (error) {
        console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
        return false;
    }
} 
